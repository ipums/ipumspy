name: build test lint

on:
  push:
    branches: [ master, test_actions ]
  pull_request:
    branches: [ master ]

jobs:
  run_tests:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.4.0
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Disable experimental installer
        run: poetry config experimental.new-installer false

      - name: Load cache
        uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      # - name: Run mypy
      #   run: poetry run mypy src

      - name: Check styling
        run: poetry run black . --check

      - name: Run tests
        env:
          # now has creds to run integration tests
          IPUMS_API_KEY: ${{ secrets.IPUMS_API_KEY }}
        run: poetry run py.test --runint
